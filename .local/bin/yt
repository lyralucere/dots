#!/usr/bin/env bash

COOKIES_FILE="$HOME/.local/share/cookies.txt"

# Firefox - https://addons.mozilla.org/en-US/firefox/addon/cookies-txt
# Chrome - https://chromewebstore.google.com/detail/get-cookiestxt-locally/cclelndahbckbenkjhflpdbgdldlbecc
 
command -v yt-dlp >/dev/null 2>&1 || { echo "yt-dlp is not installed. Exiting."; exit 1; }
command -v mpv >/dev/null 2>&1 || { echo "mpv is not installed. Exiting."; exit 1; }

if [ ! -f "$COOKIES_FILE" ]; then
    echo
    echo "Warning: cookies file not found at:"
    echo "  $COOKIES_FILE"
    echo
    echo "YouTube may block playback without authentication."
    echo "See: https://github.com/yt-dlp/yt-dlp/wiki/FAQ#how-do-i-pass-cookies-to-yt-dlp"
    echo
fi

if [ $# -eq 0 ]; then
    if command -v wl-paste &>/dev/null; then
        URL=$(wl-paste)
    elif command -v xclip &>/dev/null; then
        URL=$(xclip -selection clipboard -o)
    else
        echo
        echo "Clipboard tool not found (need wl-paste or xclip)"
        exit 1
    fi

    URL=$(echo "$URL" | tr -d '[:space:]')
    if [ -z "$URL" ]; then
        echo
        echo "Clipboard is empty or doesn't contain a URL"
        exit 1
    fi

    echo
    echo "Clipboard content: $URL"
else
    URL="$1"
    echo
    echo "URL provided via argument: $URL"
fi

extract_id() {
    local url="$1"
    local video_id=$(echo "$url" | grep -oP '(?<=v=|youtu\.be/|/watch\?v=)[^&\s]+')
    local playlist_id=$(echo "$url" | grep -oP '(?<=list=)[^&\s]+')
    
    if [ -n "$playlist_id" ]; then
        echo "playlist:https://youtube.com/playlist?list=$playlist_id"
        return 0
    fi
    
    if [ -n "$video_id" ]; then
        echo "video:https://youtube.com/watch?v=$video_id"
        return 0
    fi
    
    echo "Could not extract video or playlist ID from the URL" >&2
    return 1
}

full_url=$(extract_id "$URL")
if [ $? -ne 0 ]; then
    echo
    echo "Invalid or unsupported URL format."
    exit 1
fi

media_type=${full_url%%:*}
standardized_url=${full_url#*:}

echo
echo "Select quality:"
echo "1 - Best"
echo "2 - Medium"
echo "3 - Worst"
echo "4 - Audio only"
read -p "Choose 1-4: " quality_choice
echo

case "$quality_choice" in
    1) quality="bestvideo+bestaudio/best" ;;
    2) quality="best[height<=480]" ;;
    3) quality="worst" ;;
    4) quality="bestaudio" ;;
    *) echo "Invalid choice. Defaulting to best."; quality="bestvideo+bestaudio/best" ;;
esac

if [ "$media_type" == "video" ]; then
    read -p "Do you wish to download this video? (y/N): " download_choice
else
    read -p "Do you wish to download this entire playlist? (y/N): " download_choice
fi
echo

play_media() {
    local url="$1"
    mpv \
        --ytdl-format="$quality" \
        --ytdl-raw-options=cookies="$COOKIES_FILE" \
        "$url" 2>/dev/null
}

download_and_play() {
    local url="$1"
    exec 2>/dev/null

    if [ "$media_type" == "playlist" ]; then
        yt-dlp --add-chapters --embed-subs --cookies "$COOKIES_FILE" -f "$quality" -o "%(title)s [%(id)s].%(ext)s" "$url"

        first_video=$(yt-dlp --add-chapters --embed-subs --cookies "$COOKIES_FILE" -f "$quality" \
            -o "%(title)s [%(id)s].%(ext)s" --get-filename "$url" | head -n 1)

        if [ -n "$first_video" ]; then
            mpv "$first_video" 2>/dev/null
        else
            echo "No videos found in the playlist"
        fi
    else
        yt-dlp --add-chapters --embed-subs --cookies "$COOKIES_FILE" -f "$quality" "$url"
        downloaded_file=$(yt-dlp --add-chapters --embed-subs --cookies "$COOKIES_FILE" -f "$quality" --get-filename "$url")
        mpv "$downloaded_file" 2>/dev/null
    fi
}

case "$download_choice" in
    [Yy]|[Yy][Ee][Ss])
        download_and_play "$standardized_url"
        ;;
    *)
        play_media "$standardized_url"
        ;;
esac

